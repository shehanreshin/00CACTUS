// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  firstName String
  lastName  String
  email     String     @unique
  password  String
  role      UserRole   @default(CUSTOMER)
  status    UserStatus @default(INACTIVE)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Contact   Contact[]
  Customer  Customer?
  Staff     Staff?
}

enum UserRole {
  CUSTOMER
  STAFF
  ADMIN
}

enum UserStatus {
  INACTIVE
  ACTIVE
  TEMP_DISABLED
  PERM_DISABLED
}

model Contact {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  country     Country  @relation(fields: [countryId], references: [id])
  countryId   String
  phoneNumber String
  isDefault   Boolean
  updatedAt   DateTime @updatedAt

  @@unique([userId, phoneNumber])
}

model Address {
  id        String    @id @default(uuid())
  line1     String
  line2     String
  city      String
  region    String
  zipcode   String
  country   Country   @relation(fields: [countryId], references: [id])
  countryId String
  updatedAt DateTime  @updatedAt
  Customer  Customer?
}

model Country {
  id      String    @id @default(uuid())
  name    String
  code    String    @unique
  Contact Contact[]
  Address Address[]
}

model Customer {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  address   Address  @relation(fields: [addressId], references: [id])
  addressId String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Cart      Cart?
}

model Staff {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id         String     @id @default(uuid())
  customer   Customer   @relation(fields: [customerId], references: [id])
  customerId String     @unique
  CartItem   CartItem[]
}

model CartItem {
  id            String      @id @default(uuid())
  cart          Cart        @relation(fields: [cartId], references: [id])
  cartId        String
  productItem   ProductItem @relation(fields: [productItemId], references: [id])
  productItemId String
  qty           Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Category {
  id               String      @id @default(uuid())
  parentCategory   Category?   @relation("SubCategories", fields: [parentCategoryId], references: [id])
  parentCategoryId String?
  subCategory      Category[]  @relation("SubCategories")
  name             String      @unique
  createdAt        DateTime    @default(now())
  Variation        Variation[]
  Product          Product[]
}

model Variation {
  id              String            @id @default(uuid())
  category        Category          @relation(fields: [categoryId], references: [id])
  categoryId      String
  name            String
  createdAt       DateTime          @default(now())
  VariationOption VariationOption[]
}

model VariationOption {
  id                   String                 @id @default(uuid())
  variation            Variation              @relation(fields: [variationId], references: [id])
  variationId          String
  value                String
  createdAt            DateTime               @default(now())
  ProductConfiguration ProductConfiguration[]
}

model Product {
  id          String        @id @default(uuid())
  category    Category      @relation(fields: [categoryId], references: [id])
  categoryId  String
  name        String        @unique
  description String
  imagePath   String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  ProductItem ProductItem[]
}

model ProductItem {
  id                   String                 @id @default(uuid())
  product              Product                @relation(fields: [productId], references: [id])
  productId            String
  sku                  String                 @unique
  qtyInStock           Int
  price                Decimal
  imagePath            String
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  ProductConfiguration ProductConfiguration[]
  CartItem             CartItem[]
}

model ProductConfiguration {
  productItem       ProductItem     @relation(fields: [productItemId], references: [id])
  productItemId     String
  variationOption   VariationOption @relation(fields: [variationOptionId], references: [id])
  variationOptionId String

  @@unique([productItemId, variationOptionId])
}
